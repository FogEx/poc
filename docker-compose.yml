version: "3.9"

services:
  app_1:
    build:
      context: ./fogex
    image: fogex
    environment:
      - SECRET_KEY_BASE
      - DATABASE_URL
      - EVENT_STORE_URL
      - MQTT_HOST=mqtt_broker
      - MQTT_PORT=1883
      - PHX_HOST=0.0.0.0
      - PHX_PORT=4000
      - PHX_SERVER=true
      - RELEASE_NAME=fogex
    depends_on:
      - mqtt_broker
      - db
    ports:
      - 4001:4000

  app_2:
    build:
      context: ./fogex
    image: fogex
    environment:
      - SECRET_KEY_BASE
      - DATABASE_URL
      - EVENT_STORE_URL
      - MQTT_HOST=mqtt_broker
      - MQTT_PORT=1883
      - PHX_HOST=0.0.0.0
      - PHX_PORT=4000
      - PHX_SERVER=true
      - RELEASE_NAME=fogex
    depends_on:
      - mqtt_broker
      - db
      - db_migrations
    ports:
      - 4002:4000

  mqtt_broker:
    image: eclipse-mosquitto:2.0.14
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mqtt_broker/config/:/mosquitto/config/

  db:
    image: postgres:14
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      start_period: 10s
      retries: 5
      interval: 10s
      timeout: 3s

  db_migrations:
    build:
      context: ./fogex
      dockerfile: Dockerfile.migrations
    image: fogex/migrations
    env_file:
      - .env
    environment:
      - SECRET_KEY_BASE
      - DATABASE_URL
      - EVENT_STORE_URL
    depends_on:
      db:
        condition: service_healthy
    command: mix setup

  load_test:
    build:
      context: ./load_test
    depends_on:
      - mqtt_broker
      - app
